version: '3.8'

networks:
  crdp-cassandra-net:
    driver: bridge

services:
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    networks:
      - crdp-cassandra-net
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "-w", "2", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    networks:
      - crdp-cassandra-net
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "/usr/bin/kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka-topic-creator:
    image: confluentinc/cp-kafka:latest
    networks:
      - crdp-cassandra-net
    depends_on:
      kafka-broker:
        condition: service_healthy
    command: >
      bash -c "sleep 10 && for region in jakarta nyc london sydney saopaulo; do
        /usr/bin/kafka-topics --create \
        --bootstrap-server kafka-broker:9092 \
        --replication-factor 1 \
        --partitions 2 \
        --topic crdp-sensors-\$${region} || true;
      done"

  # Single Cassandra container
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    networks:
      - crdp-cassandra-net
    environment:
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
    ports:
      - "9042:9042"
    volumes:
      - cassandra-data:/var/lib/cassandra

  # Single Spark Master (no workers)
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    networks:
      - crdp-cassandra-net
    command: /opt/bitnami/spark/bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "8080:8080"
      - "7077:7077"

  # Airflow
  airflow:
    image: apache/airflow:2.7.0
    container_name: airflow
    networks:
      - crdp-cassandra-net
    command: airflow-standalone
    ports:
      - "8081:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags

  # Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - crdp-cassandra-net
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
      - crdp-cassandra-net
    ports:
      - "3000:3000"

volumes:
  cassandra-data:
